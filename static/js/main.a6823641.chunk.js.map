{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","BY_DEFAULT","sortField","setSortField","reverseField","setReverseField","visibleGoods","goods","listOfGoods","sort","good1","good2","BY_ALPHABET","localeCompare","BY_LENGTH","length","reverse","getSortGoods","makeSetSortField","field","className","type","onClick","classNames","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAKKA,E,oFAAAA,K,cAAAA,E,mBAAAA,E,yBAAAA,M,KAME,IAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAgCK,IAAMC,EAAgB,WAC3B,MAAkCC,mBAASH,EAASI,YAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCH,oBAAS,GAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KAEMC,EAjCR,SACEC,EACAL,EACAE,GAEA,IAAMI,EAAW,YAAOD,GAqBxB,OAnBIL,GACFM,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQT,GACN,KAAKL,EAASe,YACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,UACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXX,GACFI,EAAYQ,UAGPR,EAOcS,CACnBnB,EACAI,EACAE,GAGIc,EAAmB,SAACC,GAAD,OAAqB,kBAAMhB,EAAagB,KASjE,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAASJ,EAAiBrB,EAASe,aACnCQ,UACEG,IACE,iBACA,CAAE,WAAYrB,IAAcL,EAASe,cAN3C,iCAaA,wBACES,KAAK,SACLC,QAASJ,EAAiBrB,EAASiB,WACnCM,UACEG,IACE,oBACA,CAAE,WAAYrB,IAAcL,EAASiB,YAN3C,4BAaA,wBACEO,KAAK,SACLC,QAtCU,kBAAMjB,GAAgB,SAAAW,GAAO,OAAKA,MAuC5CI,UACEG,IACE,oBACA,CAAE,YAAanB,IANrB,sBAaEF,GAAaE,IACb,wBACEiB,KAAK,SACLC,QAlDO,WACfjB,GAAgB,GAChBF,EAAaN,EAASI,aAiDdmB,UAAU,4BAHZ,sBAUJ,6BACGd,EAAakB,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YC7HjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a6823641.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nenum SortType {\n  BY_DEFAULT = '',\n  BY_ALPHABET = 'name',\n  BY_LENGTH = 'name.length',\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getSortGoods(\n  goods: string[],\n  sortField: SortType,\n  reverseField: boolean,\n) {\n  const listOfGoods = [...goods];\n\n  if (sortField) {\n    listOfGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.BY_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SortType.BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseField) {\n    listOfGoods.reverse();\n  }\n\n  return listOfGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.BY_DEFAULT);\n  const [reverseField, setReverseField] = useState(false);\n\n  const visibleGoods = getSortGoods(\n    goodsFromServer,\n    sortField,\n    reverseField,\n  );\n\n  const makeSetSortField = (field: SortType) => () => setSortField(field);\n\n  const onReverse = () => setReverseField(reverse => !reverse);\n\n  const getReset = () => {\n    setReverseField(false);\n    setSortField(SortType.BY_DEFAULT);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={makeSetSortField(SortType.BY_ALPHABET)}\n          className={\n            classNames(\n              'button is-info',\n              { 'is-light': sortField !== SortType.BY_ALPHABET },\n            )\n          }\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={makeSetSortField(SortType.BY_LENGTH)}\n          className={\n            classNames(\n              'button is-success',\n              { 'is-light': sortField !== SortType.BY_LENGTH },\n            )\n          }\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={onReverse}\n          className={\n            classNames(\n              'button is-warning',\n              { 'is-light': !reverseField },\n            )\n          }\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverseField) && (\n          <button\n            type=\"button\"\n            onClick={getReset}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}